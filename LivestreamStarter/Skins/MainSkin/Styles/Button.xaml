<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MainButton.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="MainButton.Static.Background" Color="{DynamicResource SteadyGreyColor}" />
    <SolidColorBrush x:Key="MainButton.Static.Border" Color="{DynamicResource BcColor}" />
    <SolidColorBrush x:Key="MainButton.MouseOver.Background" Color="{DynamicResource SteadyGreyColor}" />
    <SolidColorBrush x:Key="MainButton.MouseOver.Border" Color="{DynamicResource VitaminCColor}" />
    <SolidColorBrush x:Key="MainButton.Pressed.Background" Color="{DynamicResource SteadyGreyColor}"/>
    <SolidColorBrush x:Key="MainButton.Pressed.Border" Color="{DynamicResource RedBrownColor}"/>
    <SolidColorBrush x:Key="MainButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="MainButton.Disabled.Border" Color="{DynamicResource BcColor}"/>
    <SolidColorBrush x:Key="MainButton.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MainButton.FocusVisual}"></Setter>
        <Setter Property="Background" Value="{StaticResource MainButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MainButton.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="5" />
        <Setter Property="Height" Value="25" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MainButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MainButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MainButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MainButton.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MainButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MainButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource MainButton.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MainButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MainButton.MouseOver.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="AddButton.MouseOver.Border" Color="{DynamicResource VitaminCColor}"/>
    <SolidColorBrush x:Key="AddButton.Pressed.Border" Color="{DynamicResource RedBrownColor}"/>
    <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}">
                        <Image Source="../../../img/Misc/add.png" Width="32" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource AddButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource AddButton.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TabBarButton.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="TabBarButton.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="TabBarButton.Static.Foreground" Color="#666666" />
    <SolidColorBrush x:Key="TabBarButton.Hover.Background" Color="#222222" />
    <SolidColorBrush x:Key="TabBarButton.Hover.Foreground" Color="White" />
    <SolidColorBrush x:Key="TabBarButton.Pressed.Border" Color="{DynamicResource VitaminCColor}"/>
    <SolidColorBrush x:Key="TabBarButton.Pressed.Background" Color="#222222" />
    <SolidColorBrush x:Key="TabBarButton.Pressed.Foreground" Color="White" />
    <Style x:Key="TabBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButtonStyle}">
        <Setter Property="Background" Value="{StaticResource TabBarButton.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource TabBarButton.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="12, 10, 0, 10"/>
        <Setter Property="Margin" Value="0, 5, 0, 5" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TabBarButton.Hover.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource TabBarButton.Hover.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderThickness" Value="3, 0, 0, 0"/>
                            <Setter Property="Padding" Value="9, 10, 0, 10"/>
                            <Setter Property="BorderBrush" Value="{StaticResource TabBarButton.Pressed.Border}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TabBarButton.Pressed.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource TabBarButton.Pressed.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>